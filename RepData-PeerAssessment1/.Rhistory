x <- 4L
x
class(x)
x <- c(4, "a", TRUE)
class(x)
x
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x, y)
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- 1:4
y <- 2:3
x
y
x+y
x <- c(3, 5, 1, 10, 12, 6)
x
x[x < 6] <- 0
x
x <- c(4, TRUE)
class(x)
x
x <- list(2, "a", "b", TRUE)
x
x[[1]]
class(x[[1]])
class(x)
install.packages("KernSmooth")
library(KernSmooth)
x <- 1:10
barplot(x)
plot(x)
dim(x) <- c(2,5)
x
contour(x)
persp(x)
volcano
persp(volcano)
persp(volcano, expand=0.2)
image(volcano)
persp(volcano, expand=0.2)
image(volcano)
help(abline)
cls
clear
volcano
image(volcano)
help(legend)
list.files()
list.files()
cd('GitHub')
View(x)
install.packages("swirl")
library(swirl)
rm(list=ls())
library(swirl)
swirl()
5+7
x <-5+7
x
x-3
y <-x-3
y
z <-c(1.1,9,3.14)
?c
z
c(z,555)
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
1:20
pi:10
15:1
?:
?`:`
seq(1,20)
seq(1,20, by=0.5)
seq(0,10, by=0.5)
seq(5,10, length=30)
my_seq <- seq(5,
| 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0, 1, 2), each = 10)
c(0.5,55,-10,6)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, 'Thomas')
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x<-c(44, NA, 5,NA)
x*3
y<-rnorm(1000)
z <- rep(NA,1000)
rep?
;
?rep
my_data <- sample(c(y, z), 100)
is.na(my_data)
my_na <-is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
inf - inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
is.na(x)
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,76)]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
?vect
??vect
vect<- c(foo = 11, bar = 2, norf = NA)
vect
name(vect)
names(vect)
vect2 <-c(11, 2, NA)
names(vect2) <- c(names(vect))
names(vect2) <- names(vect)
names(vect2) <- c("foo", "bar", "norf")
vect2
info()
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix, my_matrix2)
patients <- ('Bill', 'Gina', 'Kelly', 'Sean')
patients <- c('Bill', 'Gina', 'Kelly', 'Sean')
cbind(patients, my_matrix)
data.frame(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient","age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
addTwo <- function(x,y) {
x + y
}
addTwo(9,10)
install.packages(c("class", "cluster", "codetools", "MASS", "mgcv"))
library("swirl", lib.loc="C:/Program Files/R/R-3.1.1/library")
swirl()
?sample
sample(1:6, 4, replace =true)
sample(1:6, 4, replace =1)
sample(1:6, 4, replace =1)
sample(1:6, 4, replace =TRUE)
sample(1:6, 4, replace =TRUE)
sample(1:10, 4)
sample(1:10, 10)
sample(1:20, 10)
letters
LETTERS
sample(LETTERS)
flips(c(0,1), size=100, replace=TRUE, prob=c(0.3, 0.7))
flips <- sample(c(0,1), size=100, replace=TRUE, prob=c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips)
sum(flips2)
?rnorm
rnorm(10
)
rnorm(10, mean=100, sd=25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
setwd('C:/Users/Thomas/Documents/GitHub/RepData_PeerAssessment1')
activity <- read.csv('activity.csv')
activity$date <- as.Date(activity$date, format='%Y-%m-%d')
library('ggplot2')
noOfStepsPerDay <- aggregate(activity$steps, by=list(activity$date), FUN=sum, na.rm=TRUE)
p <- qplot(Group.1, weight=x, data=noOfStepsPerDay, geom="histogram", binwidth=1)
p <- p + xlab("Date")
p + ylab("Total Steps")
summary(noOfStepsPerDay$x)
noOfStepsMinAvg <- aggregate(activity$steps, by=list(activity$interval), FUN=mean, na.rm=TRUE)
p <- ggplot(noOfStepsMinAvg, aes(Group.1, x)) + geom_line()
p <- p + xlab("Time Interval")
p + ylab("Average Activity")
itvl5min <- noOfStepsMinAvg[noOfStepsMinAvg$x == max(noOfStepsMinAvg$x), 1]
itvl5min
nrow(activity[is.na(activity$steps), ])
activityNew <- merge(activity, noOfStepsMinAvg, by.x=c('interval'), by.y=c('Group.1'))
activityNew[is.na(activityNew$steps), 'steps'] <- activityNew[is.na(activityNew$steps), 'x']
noOfStepsPerDay <- aggregate(activityNew$steps, by=list(activityNew$date), FUN=sum, na.rm=TRUE)
p <- qplot(Group.1, weight=x, data=noOfStepsPerDay, geom="histogram", binwidth=1)
p <- p + xlab("Date")
p + ylab("Total Steps")
summary(noOfStepsPerDay$x)
activityNew["isWeekend"] = NA
head(activityNew)
activityNew[weekdays(activityNew$date) %in% c('Saturday', 'Sunday'), ]$isWeekend = "weekend"
head(activityNew)
activityNew[!(weekdays(activityNew$date) %in% c('Saturday', 'Sunday')), ]$isWeekend = "weekday"\
activityNew[!(weekdays(activityNew$date) %in% c('Saturday', 'Sunday')), ]$isWeekend = "weekday"
head(activityNew)
str(activityNew)
activityNew$isWeekend <- as.factor(activityNew$isWeekend)
str(activityNew)
noOfStepsMinAvg <- aggregate(activityNew$steps, by=list(activityNew$interval), FUN=mean, na.rm=TRUE)
head(noOfStepsMinAvg)
noOfStepsMinAvg <- aggregate(activityNew$steps, by=list(activityNew$interval, activityNew$isWeekend), FUN=mean, na.rm=TRUE)
head(noOfStepsMinAvg)
